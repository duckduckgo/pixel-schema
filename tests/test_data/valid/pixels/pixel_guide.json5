{
    // This file defines a hypothetical pixel that showcases various features of the pixel schema
    // Note: it is saved as ".json5" as it will mostly be viewed through GitHub UI
    "m_my_first_pixel": {
        // Required fields:
        "description": "Fires when my cool feature is used.",
        "owners": ["github_username"],
        "triggers": ["exception", "scheduled"],
        // [Optional] - parameterized portions of the pixel name, if applicable
        // The examples below result in: m.my.first.pixel.[new|returning].exceptiontype.{exception}.[phone|tablet]
        "suffixes": [
            {
                // Custom suffix, used only by this pixel
                "description": "suffixes that indicates type of user",
                // enum - see https://json-schema.org/understanding-json-schema/reference/enum
                "enum": ["new", "returning"]
            },
            {
                // Another custom suffix with a static portion
                "key": "exceptiontype",
                "description": "exception that occured",
                // implicit string type - indicating various values can occur
                // examples provided to showcase possible values
                "examples": ["filenotfoundexception", "anotherexception"]
            },
            // Shortcut to a common suffix (defined by each platform in common_suffixes.json):
            "device_type"
        ],
        // [Optional] - parameters carried by the pixel, if applicable
        "parameters": [
            // Shortcut to a common parameter (defined by each platform in common_params.json):
            "appVersion",
            // Custom parameters, used only by this pixel:
            {
                "key": "count",
                "description": "Number of times an event occured.",
                // Integer type - see https://json-schema.org/understanding-json-schema/reference/numeric
                "type": "integer",
                "minimum": 0,
                "maximum": 100
            },
            {
                "key": "date",
                "description": "Date the event occured",
                // Format - see https://json-schema.org/understanding-json-schema/reference/string
                "format": "date"
            },
            {
                "key": "is_default",
                "description": "Whether the browser is set as default",
                // Boolean - see https://json-schema.org/understanding-json-schema/reference/boolean
                "type": "boolean"
            },
            {
                "key": "blocked_trackers",
                "description": "List of blocked trackers",
                // Array - see https://json-schema.org/understanding-json-schema/reference/array
                "type": "array",
                "items": {
                    "type": "string"
                },
                // Examples - used when params are more open-ended
                "examples": [["tracker1", "tracker2"], ["tracker3"]]
            },
            {
                "key": "customMetadata",
                "description": "Complex object type",
                // See https://json-schema.org/understanding-json-schema/reference/object
                "type": "object",
                "encoding": "base64", // encoding can be omitted if the JSON object is sent in the raw
                "properties": {
                    "serviceState": {
                        "description": "State of the service",
                        "enum": ["Running", "Stopped"]
                    },
                    // Nested object are allowed, and can have their own properties:
                    "serviceMetadata": {
                        "description": "details about the VPN service",
                        "type": "object",
                        "properties": {
                            "latency": {
                                "description": "Latency of the VPN",
                                "enum": ["excellent", "bad"]
                            },
                            "domainProxyRunning": {
                                "description": "Whether the domain proxy is running",
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        ],
        // [Optional] if temporary pixel - specify expiration date:
        "expires": "2025-12-31"
    }
}
