{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "journeys.schema.json",
    "title": "Journeys",
    "description": "A schema for defining journeys (aka wide pixels) which encapsulate a set of traditional pixels for a single round-trip user interaction, API call, etc",
    "type": "object",
    "properties": {
        "defaultSuffixes": {
            "type": "array",
            "description": "List of pixel suffix combinations for wide pixels",
            "items": {
                "$ref": "suffix.schema.json#/$defs/suffix"
            }
        },
        "journeys": {
            "type": "object",
            "description": "List of journeys",
            "additionalProperties": {
                "$ref": "#/$defs/journey"
            }
        }
    },
    "$defs": {
        "global" : {
            "type": "object",
            "description": "Global properties for a journey",
            "required": ["id", "platform", "type", "sample_rate"], // are all of these required?
            "additionalProperties": false,
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the journey"
                },
                "platform": {
                    "type": "string",
                    "enum": ["Windows", "macOS", "Linux", "iOS", "Android", "Web"],
                    "description": "Platform for which the journey is defined"
                },
                "type": {
                    "type": "string",
                    "enum": ["app", "web", "mobile"],
                    "description": "Type of the journey, e.g., app, web, or mobile"
                },
                "sample_rate": {
                    "type": "number",
                    "description": "Sample rate for the journey, indicating how often it should be recorded"
                }
            },
        },
        "app": {
            "type": "object",
            "description": "Application information for the journey",
            "required": ["name", "version"],
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the application"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the application"
                }
            }
        },
        "feature": {
            "type": "object",
            "description": "Feature being tracked within the journey",
            "required": ["name", "status", "data"],
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the feature being tracked"
                },
                "status": {
                    "type": "string",
                    "enum": ["SUCCESS", "FAILURE", "PARTIAL", "ERROR", "CANCELLED"],
                    "description": "Status of the feature interaction"
                },
                "experiment_ids": {
                    "type": "array",
                    "description": "List of experiment IDs associated with this feature",
                    "items": {
                        "type": "string"
                    }
                },
                "data": {
                    "type": "object",
                    "description": "Additional data associated with the feature",
                    "$ref": "#/$defs/data"
                }
            }
        },
        "data": {
            "type": "object",
            "description": "Data collected for the journey",
            "required": ["ext"],
            "additionalProperties": false,
            "properties": {
                "error_detail": {
                    "type": "array",
                    "description": "List of errors for this operation (if any)",
                    "items": {
                        "type": "string"
                    }
                },
                "latency_ms_bucketed": {
                    "type": "array",
                    "description": "Array of latency buckets, in order of smallest to largest. ex: [10, 100, 1000, 5000]",
                    "items": {
                        "type": "integer"
                    }
                },
                "ext": {
                    "type": "object",
                    "description": "Custom data points for the journey",
                    "additionalProperties": true
                }
            }
        },
        "context": {
            "type": "object",
            "description": "Context (aka journey) is a concept that encompasses multiple features. A specific feature may be entered from different context. For example, Import could be triggered by onboarding or by selecting the feature manually.",
            "required": ["name", "id", "data"], // required or optional?
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the context"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the context"
                },
                "data": {
                    "type": "object",
                    "description": "Additional data associated with the context",
                    "additionalProperties": true
                }
            }
        },
        "journey": {
            "type": "object",
            "description": "A specific journey that encapsulates a set of traditional pixels for a single round-trip user interaction, API call, etc",
            "required": ["global", "app", "feature"],
            "additionalProperties": false,
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Detailed description of the specific interaction or API call that is instrumented"
                },
                "global": {
                    "type": "object",
                    "description": "Global properties for the journey",
                    "$ref": "#/$defs/global"
                },
                "app": {
                    "type": "object",
                    "description": "Application information for the journey",
                    "$ref": "#/$defs/app"
                },
                "feature": {
                    "type": "object",
                    "description": "Feature being tracked within the journey",
                    "$ref": "#/$defs/feature"
                },
                "context": {
                    "type": "object",
                    "description": "Context (aka journey) is a concept that encompasses multiple features. A specific feature may be entered from different context. For example, Import could be triggered by onboarding or by selecting the feature manually.",
                    "$ref": "#/$defs/context"
                },
            }
        }
    }
}